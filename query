// GET_ACCOUNT_DTLS


WITH 
  dec AS (
    SELECT
      cmpnt_ac_sk,
      CASE WHEN 'Y' = 'Y' THEN decoder_ac_sk END AS decoder_ac_sk,
      CASE WHEN 'Y' = 'Y' THEN decoder_ac_id END AS decoder_ac_id
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_decoder_xref
    WHERE decoder_ac_sk = 1234
    QUALIFY ROW_NUMBER() OVER (ORDER BY cmpnt_data_src_id, creat_tm) = 1
  ),

  base_ac AS (
    SELECT
      COALESCE(dec.cmpnt_ac_sk, 1234) AS base_ac_sk,
      dec.decoder_ac_sk,
      dec.decoder_ac_id
    FROM dec
  ),

  lnkd_ac_info AS (
    SELECT
      b.ac_sk,
      a.ac_id AS lnkd_ac_id,
      a.ac_desc AS lnkd_ac_desc,
      b.lnkd_ac_sk
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_mstr_prtnr_ac b
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_account a
      ON a.ac_sk = b.lnkd_ac_sk
  ),

  lnkd_ast_info AS (
    SELECT
      a.ac_sk,
      b.ast_short_desc,
      b.ast_long_desc,
      b.tnt_sec_id,
      b.iss_type,
      b.man_aggr_ast_id,
      b.vintage_yr,
      a.instr_id
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_mstr_prtnr_ac a
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_asset b
      ON a.instr_id = b.instr_id
  ),

  special_data_sources AS (
    SELECT DISTINCT
      cm_data_src_id
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_account
    WHERE data_src_id IN (5,10)
      AND cm_data_src_id IS NOT NULL
  ),

  tx_id_prep AS (
    SELECT
      sys_map.nrn_src_sys AS i_src_sys,
      ac_mds.CONTRACT_ID AS i_nrn_ac,
      CASE 
        WHEN LEFT(ac_mds.ACCOUNT_LEGAL_IDENTIFIER,1) IN ('-','+') 
        THEN SUBSTR(ac_mds.ACCOUNT_LEGAL_IDENTIFIER,2)
        ELSE ac_mds.ACCOUNT_LEGAL_IDENTIFIER
      END AS cleaned_tx,
      CASE WHEN sys_map.nrn_src_sys IN (SELECT cm_data_src_id FROM special_data_sources)
           THEN TRUE ELSE FALSE END AS needs_substr
    FROM DEV_NPF_DB.CDC_DIRECT.NPF_MDS_ACCOUNT_LOAD_AUD ac_mds
    INNER JOIN DEV_NPF_DB.CDC_DIRECT.NPF_MDS_LOAD_ACT_PART_AUD k
      ON ac_mds.n_mds_db = k.active_partition
    INNER JOIN DEV_NPF_DB.CDC_DIRECT.NPF_MDS_NRN_ACC_SRC_SYS_MAP_AUD sys_map
      ON ac_mds.source_system_type = sys_map.mds_src_sys
      AND (
        sys_map.mds_prod_line = ac_mds.product_line
        OR (sys_map.mds_prod_line IS NULL AND ac_mds.product_line IS NULL)
      )
    WHERE ac_mds.account_status_type_value <> 'Purged'
  ),

  user_prefs AS (
    SELECT
      ac2.AC_SK,
      MAX(CASE WHEN usr2.DFLT_RPTG_TYPE = 'PCS' THEN 1 ELSE 0 END) AS has_pcs
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.NPF_USER usr2
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.NPF_AC_CUST_USER ac2
      ON usr2.USER_SK = ac2.USER_SK
    WHERE ac2.CUST_SK = 1234
    GROUP BY ac2.AC_SK
  ),

  account_attrs AS (
    SELECT
      a.ac_sk,
      MAX(b.attrb_id || '|' || b.attrb_desc) AS attrb_desc1
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_ac_attrb a
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_attribute b
      ON a.attrb_id = b.attrb_id
    WHERE b.cust_sk = 1234
      AND b.attrb_hdr_seq = 1
    GROUP BY a.ac_sk
  ),

  account_access AS (
    SELECT DISTINCT
      AC_SK
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.NPF_AC_CUST_USER
    WHERE CUST_SK = 1234
  ),

  -- Pre-join all decode tables
  decode_data AS (
    SELECT 
      d1.dcde_code AS curr_code,
      d1.dcde_desc AS curr_desc,
      d2.dcde_code AS liab_code,
      d2.dcde_desc AS liab_desc,
      d3.dcde_code AS inv_code,
      d3.dcde_desc AS inv_desc,
      d3.dcde_type AS inv_type
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_decode d1
    LEFT JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_decode d2
      ON d2.dcde_type = 'LIABFLAG'
    LEFT JOIN (
      SELECT dcde_code, dcde_desc, 'INVOBJ' AS dcde_type 
      FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_decode 
      WHERE dcde_type = 'INVOBJ'
      UNION ALL
      SELECT dcde_code, dcde_desc, 'PCRSTYLE' AS dcde_type 
      FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_decode 
      WHERE dcde_type = 'PCRSTYLE'
    ) d3 ON 1=1
    WHERE d1.dcde_type = 'CURRDDLB'
  ),

  -- Main account data with all joins
  account_data AS (
    SELECT
      ac.*,
      base_ac.decoder_ac_sk,
      base_ac.decoder_ac_id,
      actype.ac_type_desc,
      dtltype.dtl_ac_type_desc,
      dtltype.ac_type_grp_dcde,
      dtltype.prod_info_url_desc,
      src.ac_dtl_src_desc,
      src.extl_flg,
      alias.upd_ac_desc,
      alias.ac_alias,
      alias.cust_sk,
      acagr.lst_valn_date,
      acagr.ast_acq_date,
      acagr.ac_commt_amt,
      acagr.ac_fund_amt,
      acagr.aggr_ast_id,
      pi.indx_sk,
      pi.indx_desc,
      lnkd_ac.lnkd_ac_sk,
      lnkd_ac.lnkd_ac_id,
      lnkd_ac.lnkd_ac_desc,
      lnkd_ast.ast_short_desc,
      lnkd_ast.ast_long_desc,
      lnkd_ast.tnt_sec_id,
      lnkd_ast.iss_type,
      lnkd_ast.man_aggr_ast_id,
      lnkd_ast.vintage_yr,
      tx.cleaned_tx AS raw_tx,
      tx.needs_substr,
      CASE WHEN aa.AC_SK IS NOT NULL THEN 1 ELSE 0 END AS has_access,
      up.has_pcs,
      attr.attrb_desc1
    FROM base_ac
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_account ac 
      ON ac.ac_sk = base_ac.base_ac_sk
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_cust_ac_alias alias 
      ON alias.ac_sk = ac.ac_sk AND alias.cust_sk = 1234
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_ac_type actype 
      ON actype.ac_type = ac.ac_type
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_dtl_ac_type dtltype 
      ON dtltype.dtl_ac_type = ac.dtl_ac_type
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_data_src src 
      ON src.data_src_id = ac.data_src_id
    LEFT JOIN DEV_WPA_ACCOUNTS_DB.CORE.npf_ac_aggregation acagr 
      ON acagr.ac_sk = ac.ac_sk
    LEFT JOIN DEV_WPA_ACCOUNTS_DB.CORE.npf_perf_indx pi 
      ON pi.indx_sk = 1234
    LEFT JOIN lnkd_ac_info lnkd_ac 
      ON lnkd_ac.ac_sk = ac.ac_sk
    LEFT JOIN lnkd_ast_info lnkd_ast 
      ON lnkd_ast.ac_sk = ac.ac_sk
    LEFT JOIN tx_id_prep tx 
      ON tx.i_src_sys = ac.cm_data_src_id AND tx.i_nrn_ac = ac.cm_ac_id
    LEFT JOIN account_access aa 
      ON aa.AC_SK = ac.ac_sk
    LEFT JOIN user_prefs up 
      ON up.AC_SK = ac.ac_sk
    LEFT JOIN account_attrs attr 
      ON attr.ac_sk = ac.ac_sk
  )

-- Final SELECT with all calculated fields
SELECT
  CASE
    WHEN ac_data.ac_type_grp_dcde NOT IN ('MAG','PTR')
    THEN COALESCE(ac_data.decoder_ac_sk, ac_data.ac_sk)
    ELSE ac_data.ac_sk
  END AS ac_sk,

  CASE
    WHEN ac_data.ac_type_grp_dcde NOT IN ('MAG','PTR') THEN
      COALESCE(
        ac_data.decoder_ac_id,
        CASE
          WHEN ac_data.has_access = 1
          THEN SUBSTR(LPAD(ac_data.ac_id,20,'0'), 17, 4)
          ELSE
            CASE
              WHEN 'Y' = 'Y' AND LENGTH(ac_data.ac_id) > 4 AND 
                   COALESCE(ac_data.has_pcs, 0) = 1
              THEN LPAD(SUBSTR(ac_data.ac_id, POSITION(' (' IN ac_data.ac_id) - 4), 
                       LENGTH(ac_data.ac_id), 'x')
              ELSE ac_data.ac_id
            END
        END
      )
    ELSE
      CASE
        WHEN ac_data.has_access = 1
        THEN SUBSTR(LPAD(ac_data.ac_id,20,'0'), 17, 4)
        ELSE
          CASE
            WHEN 'Y' = 'Y' AND LENGTH(ac_data.ac_id) > 4 AND 
                 COALESCE(ac_data.has_pcs, 0) = 1
            THEN LPAD(SUBSTR(ac_data.ac_id, POSITION(' (' IN ac_data.ac_id) - 4), 
                     LENGTH(ac_data.ac_id), 'x')
            ELSE ac_data.ac_id
          END
      END
  END AS ac_id,

  ac_data.bk_id,
  ac_data.ac_type,
  ac_data.ac_type_desc,
  ac_data.dtl_ac_type,
  ac_data.dtl_ac_type_desc,
  ac_data.ac_type_grp_dcde,
  ac_data.data_src_id,
  ac_data.prod_info_url_desc,

  CASE
    WHEN ac_data.needs_substr = TRUE
    THEN SUBSTR(ac_data.raw_tx, 3)
    ELSE ac_data.raw_tx
  END AS tx_id,

  CASE WHEN ac_data.ac_type_grp_dcde IN ('MAG','PTR') AND ac_data.dtl_ac_type <> 'POR'
       THEN ac_data.iss_type END AS iss_type,
  CASE WHEN ac_data.ac_type_grp_dcde IN ('MAG','PTR') AND ac_data.dtl_ac_type <> 'POR'
       THEN ac_data.man_aggr_ast_id END AS man_aggr_ast_id,

  ac_data.lst_valn_date,
  ac_data.ast_acq_date,
  ac_data.ac_commt_amt,
  ac_data.ac_fund_amt,
  ac_data.aggr_ast_id,

  CASE
    WHEN ac_data.data_src_id IN (6,8)
    THEN COALESCE(ac_data.svc_prvdr_desc, ac_data.ac_dtl_src_desc)
    ELSE ac_data.ac_dtl_src_desc
  END AS data_src_desc,

  NVL(ac_data.upd_ac_desc, ac_data.ac_desc) AS ac_desc,

  ac_data.ac_alias,
  ac_data.bse_curr_dcde,
  decode.curr_desc AS bse_curr,

  ac_data.ac_stat_dcde,
  ac_data.svc_prvdr_desc,
  ac_data.svc_prvdr_url_desc,
  ac_data.liab_flag,
  decode.liab_desc AS liab_flag_dcde,

  ac_data.real_tm_upd_flag,
  ac_data.fisc_yrnd,
  ac_data.lot_rlf_meth_dcde,

  ac_data.inv_obj_dcde AS inv_obj,
  CASE
    WHEN ac_data.data_src_id IN (7,8,12)
    THEN (SELECT inv_desc FROM decode_data WHERE inv_code = ac_data.inv_obj_dcde AND inv_type = 'PCRSTYLE' LIMIT 1)
    ELSE (SELECT inv_desc FROM decode_data WHERE inv_code = ac_data.inv_obj_dcde AND inv_type = 'INVOBJ' LIMIT 1)
  END AS inv_obj_desc,

  ac_data.ac_prem_calc_meth_dcde,
  ac_data.ac_amort_calc_meth_dcde,
  ac_data.ac_acrt_calc_meth_dcde,
  ac_data.ac_oid_calc_meth_dcde,
  ac_data.ac_close_date,
  ac_data.ac_open_date,
  ac_data.npf_data_load_date,
  ac_data.ac_creat_user_sk,
  ac_data.cm_ac_id,
  ac_data.cm_data_src_id,
  ac_data.alw_marg_ac_flag,
  ac_data.creat_by,
  ac_data.creat_tm,
  ac_data.upd_by,
  ac_data.upd_tm,
  ac_data.extl_flg,

  ac_data.attrb_desc1,

  ac_data.ac_memo_desc,
  ac_data.indx_sk,
  ac_data.indx_desc,

  CASE WHEN ac_data.ac_type_grp_dcde IN ('MAG','PTR') AND ac_data.dtl_ac_type <> 'POR'
       THEN ac_data.vintage_yr END AS vintage_yr,

  CASE WHEN ac_data.ac_type_grp_dcde IN ('MAG','PTR') AND ac_data.dtl_ac_type <> 'POR'
       THEN ac_data.lnkd_ac_sk END AS lnkd_ac_sk

FROM account_data ac_data
LEFT JOIN decode_data decode
  ON decode.curr_code = ac_data.bse_curr_dcde
  OR decode.liab_code = ac_data.liab_flag;
