WITH
  -- 1) Pull in the single user row once
  user_info AS (
    SELECT user_sk, dflt_rptg_type
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_user
    WHERE user_sk = 8901
  ),

  -- 2) Pull in any customer-specific user pref (WIT/WLT)
  user_cust_pref AS (
    SELECT acu.ac_sk, usr.dflt_rptg_type
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_ac_cust_user acu
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_user usr
      ON acu.user_sk = usr.user_sk
    WHERE acu.cust_sk = 1234
  ),

  -- 3) Materialize the entire masking logic
  masked_logic AS (
    SELECT
      ac.ac_sk,
      CASE
        WHEN get_data_mask_user_flag(NULL, 1234, ac.ac_sk) = 1 THEN
          SUBSTR(LPAD(ac.ac_id, 20, '0'),
                 LENGTH(LPAD(ac.ac_id, 20, '0')) - 3, 4)
        WHEN ui.dflt_rptg_type = 'PCS' AND LENGTH(ac.ac_id) > 4 THEN
          LPAD(
            SUBSTR(ac.ac_id, POSITION('(' IN ac.ac_id) - 4),
            LENGTH(ac.ac_id),
            'x'
          )
        WHEN ucp.dflt_rptg_type IN ('WIT','WLT') AND LENGTH(ac.ac_id) > 4 THEN
          LPAD(
            SUBSTR(ac.ac_id, POSITION('(' IN ac.ac_id) - 4),
            LENGTH(ac.ac_id),
            'x'
          )
        ELSE
          ac.ac_id
      END AS masked_ac_id
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_account ac
    LEFT JOIN user_info ui    ON 1=1         -- single-row join
    LEFT JOIN user_cust_pref ucp ON ucp.ac_sk = ac.ac_sk
  ),

  -- 4) Pull all decode values once
  decode_base AS (
    SELECT dcde_type, dcde_code, dcde_desc
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_decode
  ),

  -- 5) Pivot out the top-5 attribute descriptions
  attr_list AS (
    SELECT
      a.ac_sk,
      MAX(CASE WHEN b.attrb_hdr_seq = 1 THEN b.attrb_id || ' ' || b.attrb_desc END) AS attrib_desc1,
      MAX(CASE WHEN b.attrb_hdr_seq = 2 THEN b.attrb_id || ' ' || b.attrb_desc END) AS attrib_desc2,
      MAX(CASE WHEN b.attrb_hdr_seq = 3 THEN b.attrb_id || ' ' || b.attrb_desc END) AS attrib_desc3,
      MAX(CASE WHEN b.attrb_hdr_seq = 4 THEN b.attrb_id || ' ' || b.attrb_desc END) AS attrib_desc4,
      MAX(CASE WHEN b.attrb_hdr_seq = 5 THEN b.attrb_id || ' ' || b.attrb_desc END) AS attrib_desc5
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_ac_attrb a
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.NPF_ATTRIBUTE b
      ON a.attrb_id = b.attrb_id
     AND b.cust_sk = 1234
    GROUP BY a.ac_sk
  )

SELECT
  ac.ac_sk,

  -- flattened masking CASE
  CASE
    WHEN ac.data_src_id = 7 THEN
      CASE
        WHEN 1 = 1 THEN
          SUBSTR(LPAD(ac.ac_id,20,'0'),
                 LENGTH(LPAD(ac.ac_id,20,'0'))-3,4)
        ELSE ml.masked_ac_id
      END
    ELSE ac.ac_id
  END AS ac_id,

  ac.bk_id,
  ac.ac_type,
  actype.ac_type_desc,
  ac.dtl_ac_type,
  dtltype.dtl_ac_type_desc,
  dtltype.ac_type_grp_dcde,
  ac.data_src_id,
  dtltype.prod_info_url_desc,

  -- NVL on alias/upd logic
  NVL(
    alias.upd_ac_desc,
    CASE
      WHEN ac.data_src_id = 7 THEN ac.ac_desc
      ELSE
        CASE
          WHEN 1 = 1
           AND ac.ac_stat_dcde = 'CLOSED'
           AND ac.data_src_id NOT IN (6,7)
          THEN 'Closed - ' || dtltype.dtl_ac_type_desc
          ELSE ac.ac_desc
        END
    END
  ) AS ac_desc,

  alias.ac_alias,
  ac.bse_curr_dcde,
  cur_dec.dcde_desc    AS bse_curr,
  ac.svc_prvdr_desc,
  ac.svc_prvdr_url_desc,
  ac.liab_flag,
  liab_dec.dcde_desc   AS liab_flag_code,
  ac.real_tm_upd_flag,
  ac.fisc_yrnd,
  ac.lot_rlf_meth_dcde,
  ac.inv_obj_dcde      AS inv_obj,

  -- choose FORSTYLE vs INVOBJ based on data_src_id
  CASE
    WHEN ac.data_src_id IN (7,6,9,12) THEN inv_forstyle_dec.dcde_desc
    ELSE inv_invobj_dec.dcde_desc
  END AS inv_obj_code,

  ac.ac_prem_calc_meth_dcde,
  ac.ac_amort_calc_meth_dcde,
  ac.ac_acrt_calc_meth_dcde,
  ac.ac_oid_calc_meth_dcde,
  ac.ac_close_date,
  ac.ac_open_date,
  ac.npf_data_load_date,
  ac.ac_creat_user_sk,
  ac.cm_ac_id,
  ac.cm_data_src_id,
  ac.alw_marg_ac_flag,
  ac.creat_by,
  ac.creat_tm,
  ac.upd_by,
  ac.upd_tm,
  src.extl_flg,

  -- pulled in via attr_list
  al.attrib_desc1,
  al.attrib_desc2,
  al.attrib_desc3,
  al.attrib_desc4,
  al.attrib_desc5,

  ac.ac_memo_desc,
  pi.indx_sk,
  pi.indx_desc,
  acagr.lst_valn_date,
  acagr.ast_acq_date,
  acagr.ac_commt_amt,
  acagr.ac_fund_amt,
  acagr.aggr_ast_id,
  ast.iss_type,
  ast.man_aggr_ast_id,
  ast.vintage_yr,
  ast.fund_type,
  fund_dec.dcde_desc   AS fund_type_desc,
  ast.prc_curr_dcde,
  curidoas_dec.dcde_desc AS prc_curr,
  lnkd_ac.lnkd_ac_sk,
  lnkd_ac.lnkd_ac_id,
  lnkd_ac.ac_desc      AS lnkd_ac_desc,
  COALESCE(lnkd_ast.ast_short_desc, lnkd_ast.ast_long_desc) AS lnkd_ast_desc,
  lnkd_ast.tnt_sec_id  AS lnkd_ast_id

FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_account ac
  JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_cust_ac_alias alias
    ON ac.ac_sk = alias.ac_sk
   AND alias.cust_sk = 1234

  JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_ac_type actype
    ON actype.ac_type = ac.ac_type
  JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_dtl_ac_type dtltype
    ON dtltype.dtl_ac_type = ac.dtl_ac_type
  JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_data_src src
    ON src.data_src_id = ac.data_src_id

  --  inject the masked_logic result
  LEFT JOIN masked_logic ml
    ON ml.ac_sk = ac.ac_sk

  --  universal decode lookup
  LEFT JOIN decode_base cur_dec
    ON cur_dec.dcde_type = 'CURRIDLE'
   AND cur_dec.dcde_code = TRIM(ac.bse_curr_dcde)
  LEFT JOIN decode_base liab_dec
    ON liab_dec.dcde_type = 'LIABFLAO'
   AND liab_dec.dcde_code = TRIM(ac.liab_flag)
  LEFT JOIN decode_base inv_forstyle_dec
    ON inv_forstyle_dec.dcde_type = 'FORSTYLE'
   AND inv_forstyle_dec.dcde_code = TRIM(ac.inv_obj_dcde)
   AND ac.data_src_id IN (7,6,12)
  LEFT JOIN decode_base inv_invobj_dec
    ON inv_invobj_dec.dcde_type = 'INVOBJ'
   AND inv_invobj_dec.dcde_code = TRIM(ac.inv_obj_dcde)
   AND ac.data_src_id NOT IN (7,6,12)

  LEFT JOIN DEV_WPA_ACCOUNTS_DB.CORE.NPF_AC_AGGREGATION acagr
    ON ac.ac_sk = acagr.ac_sk
  LEFT JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.npf_asset ast
    ON acagr.aggr_ast_id = ast.bkrg_ast_id
  LEFT JOIN DEV_WPA_ACCOUNTS_DB.CORE.npf_perf_indx pi
    ON ac.ac_sk = pi.indx_sk

  -- the 5-column attribute pivot
  LEFT JOIN attr_list al
    ON al.ac_sk = ac.ac_sk

  -- the complex linked_ac subquery, left untouched
  LEFT JOIN (
    SELECT DISTINCT
      NVL(linked_ac_det.ac_desc, decoder_desc.ac_desc) AS ac_desc,
      linked_ac_det.ac_id      AS lnkd_ac_id,
      NVL(linked_ac_det.decoder_ac_sk, linked_ac_det.lnkd_ac_sk) AS lnkd_ac_sk,
      linked_ac_det.ac_sk
    FROM
      DEV_ANCHOR_ANALYTICS.WP_SRC.npf_account a,
      DEV_ANCHOR_ANALYTICS.WP_SRC.npf_ac_cust_user ac_cust,
      /* … rest of your original linked_ac logic … */
  ) lnkd_ac
    ON ac.ac_sk = lnkd_ac.ac_sk

  LEFT JOIN (
    SELECT
      a.instr_id,
      a.ac_sk,
      b.ast_short_desc,
      b.ast_long_desc,
      b.tnt_sec_id,
      b.INSTR_ID
    FROM DEV_ANCHOR_ANALYTICS.WP_SRC.npf_asset b
    JOIN DEV_ANCHOR_ANALYTICS.WP_SRC.NPF_MSTR_PRTNR_AC a
      ON a.instr_id = b.instr_id
  ) lnkd_ast
    ON lnkd_ac.lnkd_ac_sk = lnkd_ast.ac_sk

WHERE ac.ac_sk = 5678;
